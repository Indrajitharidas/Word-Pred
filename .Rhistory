setwd("~/SwiftKey_Prediction")
load("~/SwiftKey_Prediction/exploreData.RData")
install.packages(knitr)
install.packages("knitr")
library(knitr)
install.packages(c("caret", "plyr"))
install.packages(c("RWeka", "tm", "openNLP"))
length(data_blogs)
length(data_twitter)
length(data_news)
test <- function(a,b){ return(a,b)}
test(1,2)
exPlot <- data.frame(1:300)
View(exPlot)
names(exPlot) <- "range"
returnCounts <- function(x,y){
z <- c()
for(i in 1:y){
z <- c(z,sum(x[x >= i]))
}}
returnCountsP <- function(x,y){
z <- c()
for(i in 1:y){
z <- c(z,sum(x[x >= i]))
}
z <- z/sum(x)
return (z)
}
returnWPP <- function(x,y){
z <- c()
for(i in 1:y){
z <- c(z,sum(x >= i))
}
z <- z / length(x)
return(z)
}
exPlot$newsC <- returnCountsP(s_news_u_freq,300)
exPlot$newsP <- returnWPP(s_news_u_freq,300)
exPlot$blogsC <- returnCountsP(s_blogs_u_freq,300)
exPlot$blogsP <- returnWPP(s_blogs_u_freq,300)
exPlot$twitterC <- returnCountsP(s_twitter_u_freq,300)
exPlot$twitterP <- returnWPP(s_twitter_u_freq,300)
View(exPlot)
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC)) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC)) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC))
library(caret)
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC)) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC)) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC))
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC), color = "red") + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="green")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC), color="blue")
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC), color = "red") + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="g")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC), color="blue")
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC), color = "red") + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC), color="blue")
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue"))
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus")
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + title("Comparison of How Many Words are Required to Capture a Corpus")
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + ggtitle("Comparison of How Many Words are Required to Capture a Corpus")
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + ggtitle("Comparison of How Many Words are Required to Capture a Corpus") + legend(c("News", "Blogs", "Twitter"))
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + ggtitle("Comparison of How Many Words are Required to Capture a Corpus") + gglegend(c("News", "Blogs", "Twitter"))
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + ggtitle("Comparison of How Many Words are Required to Capture a Corpus") + scale_color_discrete(labels=c("News", "Blogs", "Twitter"))
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + ggtitle("Comparison of How Many Words are Required to Capture a Corpus") + scale_color_discrete(title="Corpus", labels=c("News", "Blogs", "Twitter"))
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + ggtitle("Comparison of How Many Words are Required to Capture a Corpus") + scale_color_discrete(name="Corpus", labels=c("News", "Blogs", "Twitter"))
s_news_u_freq[1:10]
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + ggtitle("Comparison of How Many Words are Required to Capture a Corpus") + scale_color_discrete(name="Corpus", labels=c("News", "Blogs", "Twitter")) + scale_x_continuous(by=0.1)
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + ggtitle("Comparison of How Many Words are Required to Capture a Corpus") + scale_color_discrete(name="Corpus", labels=c("News", "Blogs", "Twitter")) + scale_x_continuous(0,1,by=0.1)
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + ggtitle("Comparison of How Many Words are Required to Capture a Corpus") + scale_color_discrete(name="Corpus", labels=c("News", "Blogs", "Twitter")) + scale_x_continuous(0,1,1,by=0.1)
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + ggtitle("Comparison of How Many Words are Required to Capture a Corpus") + scale_color_discrete(name="Corpus", labels=c("News", "Blogs", "Twitter")) + scale_x_continuous(breaks=number_ticks(10))
?number_ticks
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + ggtitle("Comparison of How Many Words are Required to Capture a Corpus") + scale_color_discrete(name="Corpus", labels=c("News", "Blogs", "Twitter")) + scale_x_discrete(breaks=number_ticks(10))
?pretty_breaks
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + ggtitle("Comparison of How Many Words are Required to Capture a Corpus") + scale_color_discrete(name="Corpus", labels=c("News", "Blogs", "Twitter")) + scale_x_discrete(breaks=pretty_ticks(10))
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + ggtitle("Comparison of How Many Words are Required to Capture a Corpus") + scale_color_discrete(name="Corpus", labels=c("News", "Blogs", "Twitter")) + scale_x_discrete(breaks=pretty_breaks(10))
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + ggtitle("Comparison of How Many Words are Required to Capture a Corpus") + scale_color_discrete(name="Corpus", labels=c("News", "Blogs", "Twitter")) + scale_x_discrete(breaks=pretty_breaks(n=10))
ggplot() + geom_line(data=exPlot, aes(x=newsP, y=newsC, color = "red")) + geom_line(data=exPlot, aes(x=blogsP, y=blogsC, color="purple")) + geom_line(data=exPlot, aes(x=twitterP, y=twitterC, color="blue")) + xlab("Percentage of Words in Corpus") + ylab("Percentage of Word Counts in Corpus") + ggtitle("Comparison of How Many Words are Required to Capture a Corpus") + scale_color_discrete(name="Corpus", labels=c("News", "Blogs", "Twitter")) + scale_x_continuous(breaks=pretty_breaks(n=10))
?pretty_breaks
save(exPlot, file = "exPlot.rds")
save(exPlot, file = "exPlot.RData")
2360148 + 899288 + 1010242
as.numeric("1")
save.image("~/SwiftKey_Prediction/exploreData.RData")
